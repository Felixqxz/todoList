{"ast":null,"code":"import _objectSpread from \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/src/components/todo/ListTodosComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment';\nexport default function ListTodosComponent() {\n  var navigate = useNavigate();\n\n  var _useState = useState({\n    todos: [],\n    message: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoList = _useState2[0],\n      setTodoList = _useState2[1];\n\n  useEffect(function () {\n    refreshTodos();\n  }, [todoList]);\n\n  var refreshTodos = function refreshTodos() {\n    var username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(function (response) {\n      setTodoList(function (prevTodoList) {\n        return _objectSpread({\n          todos: response.data\n        }, prevTodoList);\n      });\n    });\n  };\n\n  var deleteTodoClicked = function deleteTodoClicked(id) {\n    var username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.deleteTodo(username, id).then(function (response) {\n      setTodoList(function (prevTodoList) {\n        return _objectSpread({\n          message: \"Delete of todo \".concat(id, \" Successful\")\n        }, prevTodoList);\n      });\n      refreshTodos();\n    });\n  };\n\n  var addTodoClicked = function addTodoClicked() {\n    navigate(\"/todos/-1\");\n  };\n\n  var updateTodoClicked = function updateTodoClicked(id) {\n    history.push(\"/todos/\".concat(id));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"List Todos\"), todoList.message && React.createElement(\"div\", {\n    class: \"alert alert-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, todoList.message), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Target Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"IsCompleted?\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Update\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, todoList.todos.map(function (todo) {\n    return React.createElement(\"tr\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, todo.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, moment(todo.targetDate).format('YYYY-MM-DD')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, todo.done.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: function onClick() {\n        return updateTodoClicked(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: function onClick() {\n        return deleteTodoClicked(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Delete\")));\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: addTodoClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add\"))));\n}","map":{"version":3,"sources":["/Users/qianxingzhi/Desktop/TodoWeb/frontend/src/components/todo/ListTodosComponent.jsx"],"names":["React","useState","useEffect","useNavigate","TodoDataService","AuthenticationService","moment","ListTodosComponent","navigate","todos","message","todoList","setTodoList","refreshTodos","username","getLoggedInUserName","retrieveAllTodos","then","response","prevTodoList","data","deleteTodoClicked","id","deleteTodo","addTodoClicked","updateTodoClicked","history","push","map","todo","description","targetDate","format","done","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nexport default function ListTodosComponent() {\n    const navigate = useNavigate()\n    const [todoList, setTodoList] = useState({\n        todos: [],\n        message: null\n    });\n\n    useEffect(() => {\n        refreshTodos()\n    }, [todoList]);\n\n    const refreshTodos = () => {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    setTodoList(prevTodoList => { \n                        return { \n                            todos: response.data,\n                            ...prevTodoList\n                        }\n                    })\n                }\n            )\n    }\n\n    const deleteTodoClicked = (id) => {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    setTodoList(prevTodoList => { \n                        return { \n                            message: `Delete of todo ${id} Successful`,\n                            ...prevTodoList\n                        }\n                    })\n                    refreshTodos()\n                }\n            )\n\n    }\n\n    const addTodoClicked = () => {\n        navigate(`/todos/-1`)\n    }\n\n    const updateTodoClicked = (id) => {\n        history.push(`/todos/${id}`)\n\n    }\n\n    return (\n        <div>\n            <h1>List Todos</h1>\n            {todoList.message && <div class=\"alert alert-success\">{todoList.message}</div>}\n            <div className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Target Date</th>\n                            <th>IsCompleted?</th>\n                            <th>Update</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            todoList.todos.map(\n                                todo =>\n                                    <tr key={todo.id}>\n                                        <td>{todo.description}</td>\n                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                        <td>{todo.done.toString()}</td>\n                                        <td><button className=\"btn btn-success\" onClick={() => updateTodoClicked(todo.id)}>Update</button></td>\n                                        <td><button className=\"btn btn-warning\" onClick={() => deleteTodoClicked(todo.id)}>Delete</button></td>\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n                <div className=\"row\">\n                    <button className=\"btn btn-success\" onClick={addTodoClicked}>Add</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}