{"ast":null,"code":"import _objectSpread from \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qianxingzhi/Desktop/TodoWeb/frontend/src/components/todo/Login.jsx\";\nimport React, { useState } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nexport default function Login() {\n  var _this = this;\n\n  var _useState = useState({\n    username: '',\n    password: '',\n    hasLoginFailed: false,\n    showSuccessMessage: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginForm = _useState2[0],\n      setLoginForm = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setLoginForm(function (prevLoginForm) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    });\n  };\n\n  var loginClicked = function loginClicked() {\n    AuthenticationService.executeJwtAuthenticationService(loginForm.username, loginForm.password).then(function (response) {\n      AuthenticationService.registerSuccessfulLoginForJwt(_this.state.username, response.data.token);\n\n      _this.props.history.push(\"/welcome/\".concat(loginForm.username));\n    }).catch(function () {\n      setLoginForm(function (loginForm) {\n        return _objectSpread({\n          showSuccessMessage: false,\n          hasLoginFailed: true\n        }, loginForm);\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, loginForm.hasLoginFailed && React.createElement(\"div\", {\n    className: \"alert alert-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Invalid Credentials\"), loginForm.showSuccessMessage && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: loginForm.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"Password: \", React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: loginForm.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: loginClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Login\")));\n}","map":{"version":3,"sources":["/Users/qianxingzhi/Desktop/TodoWeb/frontend/src/components/todo/Login.jsx"],"names":["React","useState","AuthenticationService","Login","username","password","hasLoginFailed","showSuccessMessage","loginForm","setLoginForm","handleChange","event","prevLoginForm","target","name","value","loginClicked","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","state","data","token","props","history","push","catch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,qBAAP,MAAkC,4BAAlC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACMF,QAAQ,CAAC;AACvCG,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,cAAc,EAAE,KAHuB;AAIvCC,IAAAA,kBAAkB,EAAE;AAJmB,GAAD,CADd;AAAA;AAAA,MACrBC,SADqB;AAAA,MACVC,YADU;;AAQ5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE5BF,IAAAA,YAAY,CAAC,UAAAG,aAAa,EAAI;AAC1B,iCACSD,KAAK,CAACE,MAAN,CAAaC,IADtB,EAC6BH,KAAK,CAACE,MAAN,CAAaE,KAD1C;AAGC,KAJO,CAAZ;AAKH,GAPD;;AAUA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvBd,IAAAA,qBAAqB,CAChBe,+BADL,CACqCT,SAAS,CAACJ,QAD/C,EACyDI,SAAS,CAACH,QADnE,EAEKa,IAFL,CAEU,UAACC,QAAD,EAAc;AAChBjB,MAAAA,qBAAqB,CAACkB,6BAAtB,CAAoD,KAAI,CAACC,KAAL,CAAWjB,QAA/D,EAAyEe,QAAQ,CAACG,IAAT,CAAcC,KAAvF;;AACA,MAAA,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,oBAAoClB,SAAS,CAACJ,QAA9C;AACH,KALL,EAKOuB,KALP,CAKa,YAAM;AACXlB,MAAAA,YAAY,CAAC,UAAAD,SAAS,EAAI;AACtB;AACID,UAAAA,kBAAkB,EAAE,KADxB;AAEID,UAAAA,cAAc,EAAE;AAFpB,WAGOE,SAHP;AAKH,OANW,CAAZ;AAOH,KAbL;AAeH,GAjBD;;AAmBI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,SAAS,CAACF,cAAV,IACG;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHR,EAKKE,SAAS,CAACD,kBAAV,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANR,iBAQe;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAEC,SAAS,CAACJ,QAApD;AAA8D,IAAA,QAAQ,EAAEM,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARf,gBASc;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAEF,SAAS,CAACH,QAAxD;AAAkE,IAAA,QAAQ,EAAEK,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATd,EAWI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEM,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,CAFJ,CADJ;AAkBP","sourcesContent":["import React, {useState} from 'react';\n\nimport AuthenticationService from './AuthenticationService.js'\n\nexport default function Login() {\n    const [loginForm, setLoginForm] = useState({\n        username: '',\n        password: '',\n        hasLoginFailed: false,\n        showSuccessMessage: false\n    });\n\n    const handleChange = (event) => {\n\n        setLoginForm(prevLoginForm => {\n            return {\n                    [event.target.name]: event.target.value\n                    }\n            })\n    }\n\n\n    const loginClicked = () => {\n\n        AuthenticationService\n            .executeJwtAuthenticationService(loginForm.username, loginForm.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${loginForm.username}`)\n            }).catch(() => {\n                setLoginForm(loginForm => {\n                    return {\n                        showSuccessMessage: false,\n                        hasLoginFailed: true,\n                        ...loginForm\n                    }\n                })\n            })\n\n    }\n\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n\n                    {loginForm.hasLoginFailed && \n                        <div className=\"alert alert-warning\">Invalid Credentials</div>}\n\n                    {loginForm.showSuccessMessage && \n                        <div>Login Sucessful</div>}\n\n                    User Name: <input type=\"text\" name=\"username\" value={loginForm.username} onChange={handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={loginForm.password} onChange={handleChange} />\n                    \n                    <button className=\"btn btn-success\" onClick={loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n}\n"]},"metadata":{},"sourceType":"module"}